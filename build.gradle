plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'application'
    id "com.palantir.docker" version "0.32.0"
}

mainClassName = 'com.prodyna.reserveyourspot.ReserveYourSpotApplication'

group = 'com.prodyna'
version = '0.0.29-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.5.6'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'
    implementation group: 'io.springfox', name: 'springfox-schema', version: '3.0.0'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.5.12'
    implementation group: 'org.apache.commons', name: 'commons-csv', version: '1.9.0'
    implementation group: 'com.univocity', name: 'univocity-parsers', version: '2.9.1'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.1'
    implementation group: 'com.jayway.jsonpath', name: 'json-path', version: '2.6.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'junit:junit:4.13.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:2.13.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.8.1'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-core', version: '2.2'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.0.0'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '4.0.0'
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-test', version: '2.5.6'
    testImplementation group: 'com.jayway.jsonpath', name: 'json-path-assert', version: '2.6.0'
    testImplementation 'org.assertj:assertj-core:3.21.0'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    compileOnly 'org.projectlombok:lombok'

    annotationProcessor 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'

}

bootJar {
    archiveName 'app.jar'
}

jar {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    manifest {
        attributes(
                'Main-Class': 'com.prodyna.reserveyourspot.ReserveYourSpotApplication'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

docker {
    dependsOn bootJar
    name "marko991/reserve-your-spot"
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "app.jar"])
    tags "latest", "${project.version}"
}
tasks.dockerPush.dependsOn { tasks.dockerTag }

test {
    useJUnitPlatform()
}



