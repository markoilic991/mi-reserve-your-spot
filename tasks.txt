+ 1. create docker image
+ 2. push this image to docker hub
+ 3. how to start up a container using docker image
+ 4. introduce use of spring profiles -> application properties for local and dev
+ 5. test pulling the image from docker hub and starting it
+ 6. build docker image locally and by gradle task (BUILD ARGS)
+ 7. build and push docker image with two tags - gradle task
+ 8. change name in docker gradle task - without _app
+ 9. update initial load to check if entities exist in db before saving
+ 10. take a look into COMMENTs, there are some *IMPORTANT things that needs to be changed
+ 11. fix README file and export Postman collection
+ 12. changelog
----------------------

1. Research how to modify put rest API (OfficeSpace) - Swagger
Example:
{
  "name": "string",
  "description": "string"
}
+ 2. create UML diagram - object
+ 3. create diagram - database
+ 4. User reservation view - analysis and preparation
+ 5. refactor code
6. try to implement @Transient annotations when we are fetching entire OfficeView instead of returning list of reservations, we should return hasReservations boolean flag;

---------------------------------